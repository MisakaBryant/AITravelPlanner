name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-frontend:
    name: Frontend Image
    runs-on: ubuntu-latest
    env:
      ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
      ACR_NAMESPACE: ${{ secrets.ACR_NAMESPACE }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate lockfile (frontend)
        working-directory: ./frontend
        run: npm install --package-lock-only

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute lowercase owner
        shell: bash
        run: echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/aitravelplanner-frontend:sha-${{ github.sha }}
            ghcr.io/${{ env.OWNER_LC }}/aitravelplanner-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to Aliyun ACR (optional)
        if: ${{ env.ACR_REGISTRY != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_REGISTRY }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push frontend to ACR (optional)
        if: ${{ env.ACR_REGISTRY != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/aitravelplanner-frontend:sha-${{ github.sha }}
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/aitravelplanner-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-backend:
    name: Backend Image
    runs-on: ubuntu-latest
    env:
      ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate lockfile (backend)
        working-directory: ./backend
        run: npm install --package-lock-only

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute lowercase owner
        shell: bash
        run: echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/aitravelplanner-backend:sha-${{ github.sha }}
            ghcr.io/${{ env.OWNER_LC }}/aitravelplanner-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to Aliyun ACR (optional)
        if: ${{ env.ACR_REGISTRY != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_REGISTRY }}
          namespace: ${{ env.ACR_NAMESPACE}}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push backend to ACR (optional)
        if: ${{ env.ACR_REGISTRY != '' && env.ACR_USERNAME != '' && env.ACR_PASSWORD != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/aitravelplanner-backend:sha-${{ github.sha }}
            ${{ env.ACR_REGISTRY }}/${{ env.ACR_NAMESPACE }}/aitravelplanner-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
